#This is a Python program for playing a simplified version of the card game Blackjack between a player and the computer

import random

suits = ['Spades','Diamonds','Clubs','Hearts']
ranks = ['Two','Three','Four','Five','Six','Seven','Eight','Nine','Ten','Jack','Queen','King','Ace']

values = {'Two':2,'Three':3,'Four':4,'Five':5,'Six':6,'Seven':7,'Eight':8,'Nine':9,'Ten':10,'Jack':10,'Queen':10,'King':10,'Ace':11}

playing = True

#We define a card class
class Card:
  def __init__(self,suit,rank):
    self.suit = suit
    self.rank = rank
    self.value = values[self.rank]
  def __str__(self):
    return self.rank + ' of ' + self.suit

#We define the deck class
class Deck:
  def __init__(self):
    self.all_cards = []
    for suit in suits:
      for rank in ranks:
        create_card = Card(suit,rank)
        self.all_cards.append(create_card)
  
  def shuffle(self):
    random.shuffle(self.all_cards)

  def deal(self):
    return self.all_cards.pop()

#We define the hand class. A hand consists of the cards currently with us.
class Hand:
  def __init__(self):
    self.cards = []
    self.value = 0
    self.aces = 0

  def add_card(self,card):
    self.cards.append(card)
    self.value += values[card.rank]
    if card.rank == 'Ace':
      self.aces +=1

  def adjust_for_ace(self):
    if self.value > 21 and self.aces:
      self.value -= 10
      self.aces -= 1
    
  

#The player takes a hit
def hit(deck,hand):
  hand.add_card(deck.deal())
  hand.adjust_for_ace()

#The player has to choose whether to hit or stand
def hit_or_stand(deck,hand):
  global playing
  while True:
    x = input('Do you want to hit or stand(Enter H or S)?')
    if x == 'H':
      hit(deck,hand)
    elif x == 'S':
      print("Player Stands ! Dealer's Turn !!")
      playing = False
    else:
      print('Sorry!! Incorrect input !')
      continue
    break

#Functions to display cards

def show_some(player,dealer):
    print("\nDealer's Hand:")
    print(" <card hidden>")
    print('',dealer.cards[1])  
    print("\nPlayer's Hand:", *player.cards, sep='\n ')
    
def show_all(player,dealer):
    print("\nDealer's Hand:", *dealer.cards, sep='\n ')
    print("Dealer's Hand =",dealer.value)
    print("\nPlayer's Hand:", *player.cards, sep='\n ')
    print("Player's Hand =",player.value)

#Functions to control end-of-game scenarios

def player_busts():
  print('Player BUSTED!!!!')

def player_wins():
  print('Player WINS!!!!')

def dealer_busts():
  print('Dealer Busts! Player WINS!!!')

def dealer_wins():
  print('Dealer Wins! Player BUSTED!!!')

def tie():
  print("It's a tie!!! Let's Push!")

#The gameplay logic
while True:
  print('****WELCOME TO BLACKJACK****')

  #Creating and shuffling a deck
  deck = Deck()
  deck.shuffle()

  #Setting up the player and dealer hands
  player_hand = Hand()
  player_hand.add_card(deck.deal())
  player_hand.add_card(deck.deal())
  dealer_hand = Hand()
  dealer_hand.add_card(deck.deal())
  dealer_hand.add_card(deck.deal())

  #Displaying all the cards except one of the dealer's
  show_some(player_hand,dealer_hand)

  while playing: 
        
        # Prompt for Player to Hit or Stand
        hit_or_stand(deck,player_hand) 
        
        # Show cards (but keep one dealer card hidden)
        show_some(player_hand,dealer_hand)  
        
        # If player's hand exceeds 21, run player_busts() and break out of loop
        if player_hand.value > 21:
            player_busts()
            break        

  #If player hasn't busted, play the dealer's hand until dealer reaches 17
  if player_hand.value <= 21:
    while dealer_hand.value < 17:
      hit(deck,dealer_hand)
    show_all(player_hand,dealer_hand)

    #Running other winning scenarios
    if player_hand.value > 21:
      dealer_busts()
    elif dealer_hand.value > player_hand.value:
      dealer_wins()
    elif dealer_hand.value < player_hand.value:
      player_wins()
    else:
      tie()
    
    new_play = input('Do you want to play again?(Y or N)')
    if new_play.lower() == 'y':

      playing = True
      continue
    else:

      print('Thank you for Playing!!!')
      break


   
  

  
